<%
  # Este parcial genera cuadro de seleccíon múltiple asociado a
  # unos botones radio Ninguno/Algunos/Todos.
  #
  # Recibe los siguientes parámetros obligatorios:
  #   f   Formulario 
  #   atr Nombre del campo
  #   col_en_grupos Colección de la cual elegir (puede estar en grupos)
  #   col_ids Arreglo con ids de los elementos de la colección col_en_grupos
  #   metodo_etiqueta_agrupamiento  Si no hay grupos en etiquetas nil,
  #     si hay grupos método que retorna el grupo de una opción.
  #   metodo_grupo Método para extaer grupo
  #   metodo_valor Método que retorna valor para cada opción
  #   metodo_etiqueta Método que retorna etiqueta para cada opción
  #   como  Si no hay grupos es nil, si hay grupos es :grouped_select
%>
<% if atr.nil? %>
  atr no puede ser nil. Debe ser atributo por editar.
  <% return %>
<% end %>
<% if f.nil? %>
  f no puede ser nil. Debe ser formulario.
  <% return %>
<% end %>
<% if col_en_grupos.nil? %>
  col_en_grupos no puede ser nil. Debe ser colección en grupos.
  <% return %>
<% end %>
<% if col_ids.nil? %>
  col_ids no puede ser nil. Debe ser arreglo con ids de la colección.
  <% return %>
<% end %>
<% if metodo_valor.nil? %>
  metodo_valor no puede ser nil. Debe ser método (símbolo o lambda)
  para extraer valor de opción de un elemento de la colección.
  <% return %>
<% end %>
<% if metodo_etiqueta.nil? %>
  metodo_etiqueta no puede ser nil. Debe ser método (símbolo o lambda)
  para extraer etiqueta para una opción correspondiente a un elemento de la 
  colección.
  <% return %>
<% end %>

<% dic = {
  collection: col_en_grupos,
  value_method: metodo_valor,
  label_method: metodo_etiqueta,
  selected: col_ids,
  label: false,
  input_html: { 
    "data-contarautomatico" => "",
    class: 'tom-select',
    multiple: true,
    "data-msip--filtro-tan-target" => "seleccion",
    "data-action" => "msip--filtro-tan#revisarCambioAlgunas"

  } 
}

if !como.nil?
  dic[:as] = como
end

if !metodo_etiqueta_agrupamiento.nil?
  dic[:group_label_method] = metodo_etiqueta_agrupamiento
end

if !metodo_grupo.nil?
  dic[:group_method] = metodo_grupo
end

%>



<%= f.input atr, dic %>
